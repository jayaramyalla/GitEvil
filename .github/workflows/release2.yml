name: Build and Release markitanalysis

on:
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to upload assets

    env:  # Set GITHUB_TOKEN globally for all steps
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine

      # Step 4: Generate a valid tag name dynamically
      - name: Generate tag name
        id: tag
        run: |
          echo "::set-output name=tag_name::v$(date +'%Y.%m.%d-%H%M%S')"

      # Step 5: Build the distribution
      - name: Build the distribution
        working-directory: ./markitanalysis  # Adjust if setup.py is inside this directory
        run: |
          python setup.py bdist_wheel --verbose

      # Step 6: Create the archive files
      - name: Create the archive files
        run: |
          zip -r markitanalysis.zip markitanalysis/
          tar -zcvf markitanalysis.tar.gz markitanalysis/

      # Step 7: Create a release
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          release_name: "markitanalysis Release ${{ steps.tag.outputs.tag_name }}"
          body: |
            Built and packaged markitanalysis using commit ${{ github.sha }}
            Download the latest release:
            - [markitanalysis.zip](${{ github.server_url }}/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag_name }}/markitanalysis.zip)
            - [markitanalysis.tar.gz](${{ github.server_url }}/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag_name }}/markitanalysis.tar.gz)
          draft: false
          prerelease: false

      # Step 8: Upload custom release assets
      - name: Upload release assets (ZIP)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./markitanalysis.zip
          asset_name: markitanalysis.zip
          asset_content_type: application/zip

      - name: Upload release assets (TAR.GZ)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./markitanalysis.tar.gz
          asset_name: markitanalysis.tar.gz
          asset_content_type: application/gzip

      # Step 9: Log release download URL
      - name: Log release download URL
        run: |
          echo "Download the latest release:"
          echo "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag_name }}/markitanalysis.zip"
          echo "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag_name }}/markitanalysis.tar.gz"
